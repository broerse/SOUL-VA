/** VA.soul test bench */

namespace main
{
    using BufferSampleType = float32<1>;
    using SampleType = float64<1>;

    graph Processor [[main]]
    {
        input stream BufferSampleType in;
        output stream BufferSampleType out;

        namespace va = VA(SampleType);
        namespace filt = soul::filters(SampleType);

        let
        { 
            //'soul render' only supports float32 primitive type buffers. To process float64, use casting. This is not an issue when 
            //compiling to cpp, wasm, etc using 'soul generate ...' 
            up = va::PrimitiveCaster(BufferSampleType, SampleType)::Processor;
            down = va::PrimitiveCaster(SampleType, BufferSampleType)::Processor;

            dcBlocker = filt::dc_blocker::Processor;

        }

        connection
        {        
            in -> up -> dcBlocker -> down -> out;
        }
    }
}


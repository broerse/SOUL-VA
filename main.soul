/** VA.soul test bench (for use with testMain.m) */

namespace main
{
    let initialVolume = 0.f;
    
    graph Processor [[main]]
    {
        input stream VA::DebugBufferType in;
        output stream VA::DebugBufferType out;

        input
        {
            //expose effect endpoints
           // event float nonlinearityIn [[ name: "Nonlinearity", min: 0, max: 275, init: initialNonlinearity, step: 1]];

            effect.delayIn;
            effect.mixIn;
            effect.feedbackIn;
            effect.cutoffIn;
            effect.resonanceIn;
        }

        let
        { 
            //convert between DebugBufferType and SampleType
            up = VA::Debug::DebugToSample::Processor;
            down = VA::Debug::SampleToDebug::Processor;

            //define effect
            //effect = VA::HighLevel::DynamicsProcessor_Lan::Processor (25.f, 20.f, 50, 0, 0, -20.f, 1.5f, 1.5f);
            //effect = VA::DelayLine::Processor (500);
            //effect = VA::LadderFilter::Processor (1000, 1.f);
            effect = VA::HighLevel::DelayLine_Ladder_NL::Processor;
        }

        connection
        {       
            in -> up -> effect.in;
            effect.out -> down -> out;
            
            //auto volume parameter
            //nonlinearityIn -> effect.nonlinearityIn;//, volumeOut.parameterIn;
        }
    }
}
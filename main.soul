/** VA.soul test bench */

namespace main
{
    using BufferSampleType = float32<1>;
    using SampleType = float64<1>;

    graph Processor [[main]]
    {
        input stream BufferSampleType in;
        output stream BufferSampleType out;

        input
        {
            onepoleS.driveIn;
        }

        namespace va = VA(SampleType);
        namespace filt = soul::filters(SampleType);

        let
        { 
            //'soul render' only supports float32 primitive type buffers. To process float64, use casting. This is not an issue when 
            //compiling to cpp, wasm, etc using 'soul generate ...' 
            up = va::Cast(BufferSampleType, SampleType)::Processor;
            down = va::Cast(SampleType, BufferSampleType)::Processor;

            onepoleS = va::OnepoleS::Processor (20.f) * 8;
        }

        connection
        {        
            in -> up -> onepoleS.in;
            onepoleS.lowpassOut -> down -> out;
        }
    }
}


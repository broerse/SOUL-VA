/** VA.soul test bench (for use with testMain.m) 

    To test an effect, modify the two commented sections under 'graph Processor [[main]]' and the run testMain.m

    The SOUL CLI doesn't take 'VA::SampleType' streams so 'float' must cast to 'VA::SampleType' and vice versa for processing.
    The uncommented sections are boilerplate for this 'mono -> stereo -> mono' processing (i.e. ignore it unless you know what you're doing).
*/

namespace main
{
    namespace FloatToSampleType
    {     
        VA::SampleType process (float x)
        {
            return VA::SampleType (x);
        }

        processor Processor()
        {
            input stream float in;
            output stream VA::SampleType out;
    
            void run()
            {   
                loop
                {
                    out << process (in);

                    advance();
                }
            }
        }
    }

    namespace SampleTypeToFloat
    {     
        float process (VA::SampleType x)
        {
            return float (x.sum()/VA::SampleType.size);
        }

        processor Processor()
        {
            input stream VA::SampleType in;
            output stream float out;
    
            void run()
            {   
                loop
                {
                    out << process (in);

                    advance();
                }
            }
        }
    }

    graph Processor [[main]]
    {
        input stream float /* VA::SampleType */ in; //change streams to SampleType if using https://soul.dev/lab/
        output stream float /* VA::SampleType */ out;

        input
        {
            //expose effect endpoints
         /*    effect.rateHzIn;
            effect.depthIn;
            effect.shapeIn;
            
            effect.cutoffIn;
            effect.resonanceIn;
            effect.nlModeIn;

            effect.mixIn;
            effect.panIn; */

            effect.cutoffIn;
            effect.resonanceIn;
            
        }

        let
        { 
            //define effect as a 'Processor' from  'VA::HighLevel'
            //effect = VA::HighLevel::Chorus_LadderLPFS::Processor (0, 0, 0, 8000, 2, 100, 0);

            effect = VA::LadderLPFS::Processor(4000, 1, 0, 4);

            up = FloatToSampleType::Processor;
            down = SampleTypeToFloat::Processor;
        }

        connection
        {       
            in -> up -> effect.in; //remove 'up' and 'down' if using https://soul.dev/lab/
            effect.out -> down -> out;
        }
    }
}
/** VA.soul test bench (for use with testMain.m) */

namespace main
{
    let initialVolume = 0.f;
    let initialNonlinearity = 0.f;

    graph Processor [[main]]
    {
        input stream VA::DebugBufferType in;
        output stream VA::DebugBufferType out;

        input
        {
            event float nonlinearityIn [[ name: "Nonlinearity", min: 0, max: 275, init: initialNonlinearity ]];

            //expose effect endpoints
            effect.stereoLinkIn;

            //define manual output volume compensation
            volumeOut.volumeIn;

            event float resetIn;
        }

        let
        { 
            //convert between DebugBufferType and SampleType
            up = VA::Debug::DebugToSample::Processor;
            down = VA::Debug::SampleToDebug::Processor;

            //define effect
            effect = VA::HighLevel::OnepoleC_Lan::Processor (275.f);

            volumeOut = VA::Common::Volume::Processor (initialVolume, 0.1f, VA::Internal::AutoVolume::Patterns::OnepoleC_Lan);
        }

        connection
        {       
            in -> up -> effect.in;
            
            nonlinearityIn -> effect.nonlinearityIn;
            nonlinearityIn ->  volumeOut.parameterIn;
            
            resetIn -> effect.resetIn;

            effect.out -> volumeOut.in;
            
            volumeOut.out -> down -> out;
        }
    }
}